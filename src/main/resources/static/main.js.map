{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-transactions/admin-transactions.component.ts","./src/app/admin-transactions/admin-transactions.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/buyer/buyer.component.ts","./src/app/buyer/buyer.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/image-show/image-show.component.ts","./src/app/image-show/image-show.component.html","./src/app/images/images.component.ts","./src/app/images/images.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/model/transaction.model.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/seller-transactions/seller-transactions.component.ts","./src/app/seller-transactions/seller-transactions.component.html","./src/app/services/cart.service.ts","./src/app/services/login.service.ts","./src/app/services/products.service.ts","./src/app/services/storage.service.ts","./src/app/services/transaction.service.ts","./src/app/services/users.service.ts","./src/app/transaction/transaction.component.ts","./src/app/transaction/transaction.component.html","./src/app/transactions/transactions.component.ts","./src/app/transactions/transactions.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/enum/role.enum.ts","./src/enum/states.enum.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../services/transaction.service';\nimport { StorageService } from '../services/storage.service';\nimport { Transaction } from '../model/transaction.model';\n\n@Component({\n  selector: 'app-admin-transactions',\n  templateUrl: './admin-transactions.component.html',\n  styleUrls: ['./admin-transactions.component.css'],\n  providers: [Transaction]\n})\nexport class AdminTransactionsComponent implements OnInit {\n\n  transactions: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n  //private transaction: Transaction\n\n  constructor(private transactionService: TransactionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService,\n    private transaction: Transaction\n    ) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.transactionService.viewAllTransactions().subscribe((res: any) => {\n     if (res.status === \"Success\") {\n        this.transactions = res.transactions;\n        this.message = \"Below is the list of all the transactions available:\"\n      }\n      else {\n        this.transactions = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.transactions = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n\n  updateTransaction(transId:any,transStatus:any){\n    this.transaction.transId = transId;\n    this.transaction.transStatus = transStatus;\n    this.transaction.userName = this.userData.userName;\n    this.transaction.isProductApprovedByBuyer = false;\n    this.transactionService.changeTransactionStatus(this.transaction).subscribe((res: any) => {\n      if (res.status === \"Success\")\n      {\n        alert(\"Transaction Status Updated\");\n        this.router.navigate([\"./../../../sellerTransactions\"], { relativeTo: this.route })\n      }\n      else\n        this.message = res.message;\n    }, err => {\n      this.message = \"Error while proccessing request, try after sometime\"\n    });\n  }\n}\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Available Transactions</h2>\n    <img src=\"../../assets/buy-icon.jpg\" style=\"cursor: pointer;\" class=\"icon\"><hr><br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"transactions\">\n      <thead>\n        <tr>\n          <th>Transaction Id</th>\n          <th>Product Id</th>\n          <th>Seller Id</th>\n          <th>Buyer Id</th>\n          <th>Quantity</th>\n          <th>Price</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let transaction of transactions | paginate: { itemsPerPage: 5, currentPage: p }\">\n          <td>{{transaction.transId}}</td>\n          <td>{{transaction.prId}}</td>\n          <td>{{transaction.sellerId}}</td>\n          <td>{{transaction.buyerId}}</td>\n          <td>{{transaction.buyPacketQty}}</td>\n          <td>{{transaction.estimatedPrice}}</td>  \n          <td>{{transaction.transactionStatus}}</td>\n          <td>\n            <a (click)=\"updateTransaction(transaction.transId,'MONEY_RESERVED_BY_ADMIN')\">\n              <img src=\"../../assets/received-money.jpg\" title=\"Money reserved by Admin\" class=\"icon\"></a>              \n            <a (click)=\"updateTransaction(transaction.transId,'MONEY_TRANSFERRED_TO_SELLER')\">\n               <img src=\"../../assets/moneyTransferredToSeller.png\" title=\"Money Transferred to Seller\" class=\"icon\"></a> \n            <a (click)=\"updateTransaction(transaction.transId,'TRANSACTION_COMPLETED')\">\n              <img src=\"../../assets/transactionComplete.png\" title=\"TransactionComplete\" class=\"icon\"></a>              \n                \n         </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"transactions\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { ProductsComponent } from './products/products.component';\nimport { UserComponent } from './user/user.component';\nimport { ProductComponent } from './product/product.component';\nimport { ImagesComponent } from './images/images.component';\nimport { BuyerComponent } from './buyer/buyer.component';\nimport { ImageShowComponent } from './image-show/image-show.component';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { SellerTransactionsComponent } from './seller-transactions/seller-transactions.component';\nimport { CartComponent } from './cart/cart.component';\nimport { AdminTransactionsComponent } from './admin-transactions/admin-transactions.component';\n\nconst routes:Routes=[\n  {path:'', redirectTo:\"login\",pathMatch:'full'},\n  {path:'login',component:LoginComponent},\n  {path:'home',component:HomeComponent,children:[\n    {path:'',component:DashboardComponent},\n    {path:'users',component:UsersComponent},\n    {path:'users/add',component:UserComponent},\n    {path:'users/edit/:id',component:UserComponent},\n    {path:'products',component:ProductsComponent},\n    {path:'products/add',component:ProductComponent},\n    {path:'products/edit/:id',component:ProductComponent},\n    {path:'products/images/:id',component:ImagesComponent},\n    // {path:'buyer/images/:id',component:ImagesComponent},\n    {path:'products/edit/:id/:action',component:ProductComponent},\n    {path:'buyer/edit/:id/:action',component:ProductComponent},\n    {path:'buyer/view/:id/:action',component:ProductComponent},\n    {path:'buyer',component:BuyerComponent},\n    {path:'buyer/image-show/:id/:action',component:ImageShowComponent},\n    {path:'transactions',component:TransactionsComponent},\n    {path:'transaction/:id/:action',component:TransactionComponent},\n    {path:'sellerTransactions',component:SellerTransactionsComponent},\n    {path:'cart',component:CartComponent},\n    {path:'adminTransactions',component:AdminTransactionsComponent}\n\n  ]},\n  {path:'**',redirectTo:\"login\"}\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Assignment1';\n}\n","<!-- <app-login></app-login> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { LoginService } from './services/login.service';\nimport { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { ProductsComponent } from './products/products.component';\nimport { UsersService } from './services/users.service';\nimport { StorageService } from './services/storage.service';\nimport { UserComponent } from './user/user.component';\nimport { ProductsService } from './services/products.service';\nimport { ProductComponent } from './product/product.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { ImagesComponent } from './images/images.component';\nimport { BuyerComponent } from './buyer/buyer.component';\nimport { ImageShowComponent } from './image-show/image-show.component';\nimport { TransactionService } from './services/transaction.service';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { SellerTransactionsComponent } from './seller-transactions/seller-transactions.component';\nimport { CartComponent } from './cart/cart.component';\nimport { AdminTransactionsComponent } from './admin-transactions/admin-transactions.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    UsersComponent,\n    ProductsComponent,\n    UserComponent,\n    ProductComponent,\n    ImagesComponent,\n    BuyerComponent,\n    ImageShowComponent,\n    TransactionComponent,\n    TransactionsComponent,\n    SellerTransactionsComponent,\n    CartComponent,\n    AdminTransactionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [UsersService,ProductsService,StorageService,TransactionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-buyer',\n  templateUrl: './buyer.component.html',\n  styleUrls: ['./buyer.component.css']\n})\nexport class BuyerComponent implements OnInit {\n\n  products: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n\n  constructor(private productsService: ProductsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.productsService.viewAllProducts().subscribe((res: any) => {\n      console.log(res);\n      if (res.status === \"Success\") {\n        this.products = res.products;\n        this.message = \"Below is the list of all the products available:\"\n      }\n      else {\n        this.products = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.products = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n  onBuy(productId) {\n    this.action=\"buy\";\n    // this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n    this.router.navigate([\"../transaction/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n  addToCart(productId) {\n    this.action=\"addToCart\";\n    // this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n    this.router.navigate([\"../transaction/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n\n  doDocuments(productId) {\n    this.action=\"viewDocument\"\n    this.router.navigate([\"image-show/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n  \n  onView(productId){\n    this.action=\"view\";\n    this.router.navigate([\"view/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n}\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Available Products</h2>\n    <br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"products\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products | paginate: { itemsPerPage: 5, currentPage: p }\">\n          <td>{{product.name}}</td>\n          <!-- <td>{{product.price}}</td>\n          <td>{{product.quantity}}</td> -->\n          <td>{{product.category}}</td>\n          <td>{{product.availablePackets}}</td>         \n          <td>\n            <a (click)=\"onView(product.prId)\" title=\"View Product\"><img src=\"../../assets/view-icon.jpg\" class=\"icon\"></a>            \n            <a (click)=\"doDocuments(product.prId)\" title=\"View Documents\"><img src=\"../../assets/documents.png\" class=\"icon\"></a>\n            <a (click)=\"addToCart(product.prId)\" title=\"Add To Cart\"><img src=\"../../assets/kart.jpg\" class=\"icon\"></a>\n            <a (click)=\"onBuy(product.prId)\" title=\"Payment\"><img src=\"../../assets/pay-icon.jpg\" class=\"icon\"></a>\n           </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"products\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CartService } from '../services/cart.service';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  cartItems: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n\n  constructor(private cartService: CartService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.cartService.viewCartForBuyer(this.userData).subscribe((res: any) => {\n      console.log(res);\n      if (res.status === \"Success\") {\n        this.cartItems = res.cartItems;\n        this.message = \"Below is the list of items in the cart:\"\n      }\n      else {\n        this.cartItems = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.cartItems = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n\n  onEdit(productId) {\n    this.action=\"edit\";\n    this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n\n  // onView(productId) {\n  //   this.action=\"view\";\n  //   this.router.navigate([\"view/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  // }\n\n  // onBuy(productId) {\n  //   this.action=\"buy\";\n  //   this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  // }\n\n  // onBuy(productId) {\n  //   this.action=\"buy\";\n  //   // this.router.navigate([\"transaction/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  //   this.router.navigate([\"transaction/\"+productId+\"/\"+this.action]);\n  // }\n\n  doDocuments(productId) {\n    this.router.navigate([\"images/\"+productId],{relativeTo:this.route});\n  }\n\n  // onDelete(productId) {\n  //   console.log(productId);\n  //   this.cartService.deleteItem(productId).subscribe((res:any)=>{\n  //     console.log(res);\n  //     if(res.status===\"Success\"){\n  //       this.ngOnInit();\n  //       this.createMessage=res.message;\n  //     }\n  //     else{\n  //       this.createMessage=res.message;\n  //     }\n  //   },err=>{\n  //     if(err.status!=0)\n  //     this.createMessage=err.error.message;\n  //     else\n  //     this.createMessage=\"Error while processing request\"\n  //   });\n  // }\n\n  onAdd() {\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }  \n  checkOut(productId) {\n    this.action=\"buy\";\n    // this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n    this.router.navigate([\"../transaction/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n\n}\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Available Items In Cart</h2>\n    <br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"cartItems\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Item Cost</th>\n          <th>Quantity</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of cartItems | paginate: { itemsPerPage: 1, currentPage: p }\">\n          <td>{{product.name}}</td>\n          <td>{{product.estimatedPrice}}</td>\n          <td>{{product.buyPacketQty}}</td>           \n          <td>\n            <a (click)=\"onView(product.prId)\" title=\"View Product\"><img src=\"../../assets/view-icon.jpg\" class=\"icon\"></a>           \n            <a (click)=\"viewDocuments(product.prId)\" title=\"View Documents\"><img src=\"../../assets/documents.png\" class=\"icon\"></a>\n            <a (click)=\"checkOut(product.prId)\" title=\"DoPayment\"><img src=\"../../assets/payment.jpg\" class=\"icon\"></a>\n           \n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"cartItems\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n   userData:any=\"\";\n\n  constructor(private router:Router,\n    private route:ActivatedRoute,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n  }\n\n  onUserClick(){\n    this.router.navigate(['users'],{relativeTo:this.route});\n  }\n\n  onProductClick(){\n    this.router.navigate(['products'],{relativeTo:this.route});\n  }\n\n}\n","<span class=\"card\" style=\"width: 18rem;\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM'\">\n    <img class=\"card-img-top\" src=\"../../assets/user-image.jpg\" alt=\"Card image cap\">\n    <span class=\"card-body\">\n      <h5 class=\"card-title\">User</h5>\n      <p class=\"card-text\">You can manage(add,view,edit,delete) the users using this option.</p>\n      <a (click)=\"onUserClick()\" class=\"btn btn-primary\" style=\"cursor: pointer;\">Manage users</a>\n    </span>\n  </span>\n\n  <span class=\"card\" style=\"width: 18rem;\" >\n    <img class=\"card-img-top\" src=\"../../assets/product-image.png\" alt=\"Card image cap\">\n    <span class=\"card-body\">\n      <h5 class=\"card-title\">Product</h5>\n      <p class=\"card-text\">You can manage(add,view,edit,delete) products using this option.</p>\n      <a (click)=\"onProductClick()\" class=\"btn btn-primary\" style=\"cursor: pointer;\">Manage products</a>\n    </span>\n  </span>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  //name=\"\";\n  userData:any=\"\";\n  constructor(private router:Router,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    console.log(\"Data of users fetched is : \",this.userData);\n  }\n\n  onHomeClick(){\n    this.router.navigate(['/home']);\n  }\n\n  logout(){\n    this.router.navigate(['/login']);\n  }\n\n}\n","<!-- <nav class=\"navbar navbar-default bg-dark\"> -->\n<nav class=\"navbar navbar-default bg-light\">\n    <h5 style=\"color: orange;cursor: pointer;\" (click)=\"onHomeClick()\">Welcome, <i>{{userData.userName}}</i> :)</h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"users\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' \">Users</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"products\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' ||\n     userData.role==='SELLER'\">Items For Sell</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"buyer\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' ||\n    userData.role==='BUYER'\" >Items To Buy</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"transactions\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' ||\n    userData.role==='BUYER'\">Buyer Transactions</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"sellerTransactions\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' ||\n    userData.role==='SELLER'\">Seller Transactions</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"cart\" *ngIf=\"userData.role==='ADMIN' || userData.role==='BUYER'\">Cart</button>&nbsp;&nbsp;\n    <button class=\"btn btn-primary\" routerLink=\"adminTransactions\" *ngIf=\"userData.role==='ADMIN' || userData.role==='CSM' \">Admin Transactions</button>\n    <img src=\"../../assets/logout-icon.png\" alt=\"logouticon\" class=\"icon\" (click)=\"logout()\">\n  </nav>\n<router-outlet></router-outlet>","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient,HttpEventType,HttpResponse } from '@angular/common/http';\nimport {ProductsService} from \"../services/products.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router,ActivatedRoute} from \"@angular/router\";\nimport { AnonymousSubject } from 'rxjs/internal/Subject';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-image-show',\n  templateUrl: './image-show.component.html',\n  styleUrls: ['./image-show.component.css']\n})\nexport class ImageShowComponent implements OnInit {\n  myFiles:File [] = [];\n  pic1:any = null;\n  pic2:any = null;\n  pic3:any = null;\n  pic4:any = null;\n  msds:any = null;\n  coa:any = null;\n  specificationSheet:File = null;\n  imageURL:any;\n  receivedImageData: any;\n  docType :any;\n  base64Data: any;\n  convertedImage: any;\n  prId: any;\n  productId: any;\n  retrieveResponse: any;\n  count:number;\n  action:any;\n\n  constructor(private http:HttpClient,private productsService: ProductsService,\n    private formBuilder: FormBuilder,private router: Router,private route:ActivatedRoute,\n    private location: Location) { }\n\n    //public selectedFile:any;\n    imgURL: any;\n    public  onFileChanged1(event) {\n      console.log(event);\n      this.pic1 = event.target.files[0];\n  \n      // Below part is used to display the selected image\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event2) => {\n        this.imgURL = reader.result;\n    };\n  }\n\n//   public  onFileChanged(event) {\n//     console.log(event);\n//     this.myFiles.push = event.target.files[0];\n//     // Below part is used to display the selected image\n//   //   let reader = new FileReader();\n//   //   reader.readAsDataURL(event.target.files[0]);\n//   //   reader.onload = (event2) => {\n//   //     this.imgURL = reader.result;\n//   // };\n// }\n\n \n\n//  addProductForm: FormGroup;\n imagesForm: FormGroup;\n  ngOnInit() {     \nthis.imagesForm = this.formBuilder.group({\nproductId: [this.prId],\npic1: [null, Validators.required],\npic2:[null,],\npic3: [null,],\npic4: [null,],\ncoa: [null,Validators.required],\nspecificationSheet: [null,Validators.required],\nmsds: [null,Validators.required]\n  });\n\n  this.prId = this.route.snapshot.params['id'];\n  // if (this.prId && this.action=='buy') {\n  //   this.transactionService.buyTransaction(this.prId).subscribe((res: any) => {\n  //     if (res.status === \"Success\") {\n  //       this.addProductForm.disable();\n  //       this.addProductForm.get('buyPacketQty').enable();\n  //       this.addProductForm.get('buyerMessage').enable();\n  //       this.addProductForm.patchValue(res.product)\n  //     }\n  //   })\n  // }\n\n  if (this.prId && this.action=='viewDocument') {\n    this.productsService.getImages(this.prId).subscribe((res: any) => {\n    this.retrieveResponse = res;\n    this.imagesForm.disable();\n    this.imagesRead(this.retrieveResponse);    \n    })\n  }\n\n  if (this.prId) {\n    this.productsService.getImages(this.prId).subscribe((res: any) => {\n    this.retrieveResponse = res;\n    this.imagesRead(this.retrieveResponse);\n    \n    })\n  }\n}\n\nimagesRead(respo:any){\n  \n  for(this.count=0;this.count<respo.length;this.count++)\n  { \n  switch(respo[this.count].picType)\n  {\n    case \"pic1\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.pic1 = this.docType + this.base64Data;\n    break;\n    case \"pic2\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.pic2 = this.docType + this.base64Data;\n    break;\n    case \"pic3\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.pic3 = this.docType + this.base64Data;\n    break;\n    case \"pic4\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.pic4 = this.docType + this.base64Data;\n    break;\n    case \"coa\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.coa = this.docType + this.base64Data;\n    break;\n    case \"specificationSheet\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.specificationSheet = this.docType + this.base64Data;\n    break;\n    case \"msds\":\n    this.retrieveResponse = respo[this.count];\n    this.docType = 'data:'+this.retrieveResponse.imageType+';base64,';\n    this.base64Data = this.retrieveResponse.pic;\n    this.msds = this.docType + this.base64Data;\n    break;\n  }}\n}\n onSubmit() {\n  this.productsService.pushFilesToStorage(this.pic1,this.pic2,this.pic3,this.pic4,this.coa,this.msds,\n    this.specificationSheet,this.prId)\n  .subscribe(\n               res => {console.log(res);\n                       this.receivedImageData = res;\n                       this.base64Data = this.receivedImageData.pic;\n                       this.convertedImage = 'data:image/jpeg;base64,' + this.base64Data; \n                       alert(\"Data and Images saved successfully\");\n                       this.router.navigate([\"./..\"], { relativeTo: this.route })\n                    },\n               err => {console.log('Error Occured during saving: ' + err);\n               alert('Error Occured during saving: ' + err.error.message);} \n            );\n }\n\n backHistory(){\n  this.location.back();    \n}\n\n\n\n  // onFileSelected(event:any,controlName:String,file:File)\n  onFileSelected(event:any,controlName:String)\n  {\n    const max_size = 1048576;\n    const allowed_types = ['image/png', 'image/jpeg'];\n    const max_height = 15200;\n    const max_width = 25600;\n\n    if (event.target.files[0].size > max_size) {\n        // this.imageError =\n        //     'Maximum size allowed is ' + max_size / 1000 + 'Mb';\n            alert(\"File size should be leas then 1 mb\");\n           event.target.files[0].value = null;\n        return false;\n    }\n\n    // if (file.type!=allowed_types[0] || file.type!=allowed_types[1]) {\n    //     alert('Only Images are allowed ( JPG | PNG )');\n    //     return false;\n    // }\n    console.log(event);\n    console.log(controlName);\n    switch(controlName)\n    {\n      case \"pic1\":this.pic1 = <File>event.target.files[0];\n      break;\n      case \"pic2\":this.pic2 = <File>event.target.files[0];\n      break;\n      case \"pic3\":this.pic3 = <File>event.target.files[0];\n      break;\n      case \"pic4\":this.pic4 = <File>event.target.files[0];\n      break;\n      case \"coa\":this.coa = <File>event.target.files[0];\n      break;\n      case \"specificationSheet\":this.specificationSheet = <File>event.target.files[0];\n      break;\n      case \"msds\":this.msds = <File>event.target.files[0];\n      break;\n    }\n  }\n}\n","<!-- <app-header [isUserLoggedIn]=\"true\" ></app-header> -->\n<div class=\"col-md-12 mat-app-background\">\n    <h2 class=\"text-center\">Available Images</h2>\n    <form [formGroup]=\"imagesForm\"> \n     \n  \n      <!-- <div class=\"form-group row\">      \n         <input type=\"hidden\" formControlName=\"productId\" placeholder=\"Id received by Adding Product\" name=\"productId\" class=\"form-control\" class=\"col-sm-8\" id=\"productId\"> \n        <input formControlName=\"productId\" placeholder=\"Id received by Adding Product\" \n        value=(this.prId) name=\"productId\" class=\"form-control\" class=\"col-sm-3\" id=\"productId\">\n      </div> -->\n      \n      <div class=\"form-group row form-group required\">\n        <label class=\"col-sm-2 control-label\" for=\"pic1\">Pic1:</label>\n         <!-- <input type=\"file\" data-max-size=\"1048\" class=\"form-control\" formControlName=\"pic1\" name=\"pic1\" \n          id=\"pic1\" class=\"col-sm-3\" >  -->\n          <img [src]=\"pic1\" height=200>      \n      </div>    \n  \n      <div class=\"form-group row\">\n        <label class=\"col-sm-2 control-label\" for=\"pic2\">Pic2 :</label>\n        <!-- <input type=\"file\" class=\"form-control\" formControlName=\"pic2\" name=\"pic2\"  \n        (change)=\"onFileSelected($event,'pic2')\" id=\"pic2\" class=\"col-sm-3\"> -->\n        <img [src]=\"pic2\" height=\"200\" *ngIf=\"pic2\">     \n      </div>\n  \n      <div class=\"form-group row\">\n        <label class=\"col-sm-2 control-label\" for=\"pic3\">Pic 3 :</label>\n        <img [src]=\"pic3\" height=\"200\" *ngIf=\"pic3\">  \n      </div>\n  \n      <div class=\"form-group row\">\n        <label class=\"col-sm-2 control-label\" for=\"pic4\">Pic 4 :</label>\n        <img [src]=\"pic4\" height=\"200\" *ngIf=\"pic4\">  \n      </div>\n  \n      <div class=\"form-group row form-group required\">\n        <label class=\"col-sm-2 control-label\" for=\"coa\">Certificate of Analysis :</label>\n        <img [src]=\"coa\" height=\"200\" *ngIf=\"coa\">  \n      </div>\n  \n      <div class=\"form-group row form-group required\">\n        <label class=\"col-sm-2 control-label\" for=\"specificationSheet\">Specification Sheet :</label>     \n        <img [src]=\"specificationSheet\" height=\"200\" *ngIf=\"specificationSheet\">  \n      </div>\n      <div class=\"form-group row form-group required\">\n        <label class=\"col-sm-2 control-label\" for=\"msds\">Material Safety Data Sheet:</label>\n        <img [src]=\"msds\" height=\"200\" *ngIf=\"msds\">  \n      </div>\n      <!-- <div class=\"form-group row\">\n          <label class=\"col-sm-2\" for=\"approved\">Product Approved for Sell :</label>\n          <input formControlName=\"approved\" placeholder=\"Certificate of Analysis\" name=\"approved\" class=\"form-control\" class=\"col-sm-8\" id=\"approved\">\n       </div> -->\n  \n      <!-- SHOULD BE IN ADMIN LIST <div class=\"form-group\">       \n          <input type=\"hidden\" formControlName=\"updateOn\" name=\"updateOn\" class=\"form-control\" id=\"updateOn\">\n          <input type=\"hidden\" formControlName=\"loadedBy\" name=\"loadedBy\" class=\"form-control\" id=\"loadedBy\">\n          <input type=\"hidden\" formControlName=\"approvedBy\" name=\"approvedBy\" class=\"form-control\" id=\"approvedBy\">\n       </div> -->\n    <div class=\"form-group row\"  *ngIf=\"this.action!='viewDocument'\">\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"backHistory()\">Back</button>\n    </div>\n    <div class=\"form-group row\"  *ngIf=\"this.action=='viewDocument'\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button type=\"reset\" class=\"btn btn-success\" id=\"reset-btn\" ng-click=\"addImagesForm.reset\">Reset</button> \n      </div>\n    </form>\n  </div>","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient,HttpEventType,HttpResponse } from '@angular/common/http';\nimport {ProductsService} from \"../services/products.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router,ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.css']\n})\nexport class ImagesComponent implements OnInit {\n  myFiles:File [] = [];\n  pic1:File = null;\n  pic2:File = null;\n  pic3:File = null;\n  pic4:File = null;\n  msds:File = null;\n  coa:File = null;\n  specificationSheet:File = null;\n  imageURL:any;\n  receivedImageData: any;\n  base64Data: any;\n  convertedImage: any;\n  prId: any;\n  productId: any;\n\n  constructor(private http:HttpClient,private productsService: ProductsService,\n    private formBuilder: FormBuilder,private router: Router,private route:ActivatedRoute) { }\n\n    //public selectedFile:any;\n    imgURL: any;\n    public  onFileChanged1(event) {\n      console.log(event);\n      this.pic1 = event.target.files[0];\n  \n      // Below part is used to display the selected image\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event2) => {\n        this.imgURL = reader.result;\n    };\n  }\n\n  public  onFileChanged(event) {\n    console.log(event);\n    this.myFiles.push = event.target.files[0];\n    // Below part is used to display the selected image\n  //   let reader = new FileReader();\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   reader.onload = (event2) => {\n  //     this.imgURL = reader.result;\n  // };\n}\n\n \n\n//  addProductForm: FormGroup;\n addImagesForm: FormGroup;\n  ngOnInit() {     \nthis.addImagesForm = this.formBuilder.group({\nproductId: [this.prId],\npic1: [null, Validators.required],\npic2:[null,],\npic3: [null,],\npic4: [null,],\ncoa: [null,Validators.required],\nspecificationSheet: [null,Validators.required],\nmsds: [null,Validators.required]\n  });\n\n  this.prId = this.route.snapshot.params['id'];\n  // if (this.prId && this.action=='edit') {\n  //   this.productService.getProduct(this.prId).subscribe((res: any) => {\n  //     if (res.status === \"Success\") {\n  //     //  this.userForm.get('name').disable();\n  //       this.addProductForm.patchValue(res.product)\n  //     }\n  //   })\n  // }\n}\n onSubmit() {\n  this.productsService.pushFilesToStorage(this.pic1,this.pic2,this.pic3,this.pic4,this.coa,this.msds,\n    this.specificationSheet,this.prId)\n  .subscribe((res:any) =>\n                {console.log(res);\n                if(res.status===true){\n                       this.receivedImageData = res;\n                       this.base64Data = this.receivedImageData.pic;\n                       this.convertedImage = 'data:image/jpeg;base64,' + this.base64Data; \n                       alert(\"Data and Images saved successfully\");\n                       //this.router.navigate([\"./..\"], { relativeTo: this.route })\n                    }\n                    else{\n                      alert(\"Data could not be saved \");\n                    }},\n               err => {console.log('Error Occured during saving: ' + err);\n               alert('Error Occured during saving: ' + err.error.message);} \n            );\n }\n\n\n\n\n  // onFileSelected(event:any,controlName:String,file:File)\n  onFileSelected(event:any,controlName:String)\n  {\n    const max_size = 1048576;\n    const allowed_types = ['image/png', 'image/jpeg'];\n    const max_height = 200;\n    const max_width = 200;\n\n    if (event.target.files[0].size > max_size) {\n        // this.imageError =\n        //     'Maximum size allowed is ' + max_size / 1000 + 'Mb';\n            alert(\"File size should be leas then 1 mb\");\n           // this.pic1=null;\n           event.target.files[0].value = null;\n        return false;\n    }\n\n    // if (file.type!=allowed_types[0] || file.type!=allowed_types[1]) {\n    //     alert('Only Images are allowed ( JPG | PNG )');\n    //     return false;\n    // }\n    console.log(event);\n    console.log(controlName);\n    switch(controlName)\n    {\n      case \"pic1\":this.pic1 = <File>event.target.files[0];\n      break;\n      case \"pic2\":this.pic2 = <File>event.target.files[0];\n      break;\n      case \"pic3\":this.pic3 = <File>event.target.files[0];\n      break;\n      case \"pic4\":this.pic4 = <File>event.target.files[0];\n      break;\n      case \"coa\":this.coa = <File>event.target.files[0];\n      break;\n      case \"specificationSheet\":this.specificationSheet = <File>event.target.files[0];\n      break;\n      case \"msds\":this.msds = <File>event.target.files[0];\n      break;\n    }\n  }\n  }\n\n","<!-- <app-header [isUserLoggedIn]=\"true\" ></app-header> -->\n<div class=\"col-md-12 mat-app-background\">\n  <h2 class=\"text-center\">Add Images</h2>\n  <form [formGroup]=\"addImagesForm\" (ngSubmit)=\"onSubmit()\"> \n   \n\n    <!-- <div class=\"form-group row\">      \n       <input type=\"hidden\" formControlName=\"productId\" placeholder=\"Id received by Adding Product\" name=\"productId\" class=\"form-control\" class=\"col-sm-8\" id=\"productId\"> \n      <input formControlName=\"productId\" placeholder=\"Id received by Adding Product\" \n      value=(this.prId) name=\"productId\" class=\"form-control\" class=\"col-sm-3\" id=\"productId\">\n    </div> -->\n    \n    <div class=\"form-group row form-group required\">\n      <label class=\"col-sm-2 control-label\" for=\"pic1\">Pic1:</label>\n       <input type=\"file\" data-max-size=\"1048\" class=\"form-control\" formControlName=\"pic1\" name=\"pic1\" \n       (change)=\"onFileSelected($event,'pic1')\" id=\"pic1\" class=\"col-sm-3\" required> \n      <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n      <span *ngIf=\"!addImagesForm.get('pic1').valid && addImagesForm.get('pic1').touched\"\n      class=\"error\">Please select a valid file</span>\n      <span *ngIf=\"addImagesForm.get('pic1').valid && addImagesForm.get('pic1').touched\">\n        <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n      </span>\n    </div>    \n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 control-label\" for=\"pic2\">Pic2 :</label>\n      <input type=\"file\" class=\"form-control\" formControlName=\"pic2\" name=\"pic2\"  \n      (change)=\"onFileSelected($event,'pic2')\" id=\"pic2\" class=\"col-sm-3\">\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 control-label\" for=\"pic3\">Pic 3 :</label>\n      <input type=\"file\" class=\"form-control\" formControlName=\"pic3\" name=\"pic3\"  \n      (change)=\"onFileSelected($event,'pic3')\"  id=\"pic3\" class=\"col-sm-3\">\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 control-label\" for=\"pic4\">Pic 4 :</label>\n      <input type=\"file\" class=\"form-control\" formControlName=\"pic4\" name=\"pic4\" \n      (change)=\"onFileSelected($event,'pic4')\" id=\"pic4\" class=\"col-sm-3\">\n    </div>\n\n    <div class=\"form-group row form-group required\">\n      <label class=\"col-sm-2 control-label\" for=\"coa\">Certificate of Analysis :</label>\n      <input type=\"file\" class=\"form-control\" formControlName=\"coa\" name=\"coa\" \n      (change)=\"onFileSelected($event,'coa')\" id=\"coa\" class=\"col-sm-3\">\n      <!-- <span *ngIf=\"!addImagesForm.get('fname').valid && addImagesForm.get('fname').touched\"\n      class=\"error\">Please select a valid file</span> -->\n    </div>\n\n    <div class=\"form-group row form-group required\">\n      <label class=\"col-sm-2 control-label\" for=\"specificationSheet\">Specification Sheet :</label>     \n      <input type=\"file\" class=\"form-control\" formControlName=\"specificationSheet\" \n      name=\"specificationSheet\" (change)=\"onFileSelected($event,'specificationSheet')\" \n      id=\"specificationSheet\" class=\"col-sm-3\">     \n    </div>\n    <div class=\"form-group row form-group required\">\n      <label class=\"col-sm-2 control-label\" for=\"msds\">Material Safety Data Sheet:</label>\n      <input type=\"file\" class=\"form-control\" formControlName=\"msds\" name=\"msds\" \n      (change)=\"onFileSelected($event,'msds')\" id=\"msds\" class=\"col-sm-3\">\n    </div>\n    <!-- <div class=\"form-group row\">\n        <label class=\"col-sm-2\" for=\"approved\">Product Approved for Sell :</label>\n        <input formControlName=\"approved\" placeholder=\"Certificate of Analysis\" name=\"approved\" class=\"form-control\" class=\"col-sm-8\" id=\"approved\">\n     </div> -->\n\n    <!-- SHOULD BE IN ADMIN LIST <div class=\"form-group\">       \n        <input type=\"hidden\" formControlName=\"updateOn\" name=\"updateOn\" class=\"form-control\" id=\"updateOn\">\n        <input type=\"hidden\" formControlName=\"loadedBy\" name=\"loadedBy\" class=\"form-control\" id=\"loadedBy\">\n        <input type=\"hidden\" formControlName=\"approvedBy\" name=\"approvedBy\" class=\"form-control\" id=\"approvedBy\">\n     </div> -->\n     <div class=\"form-group row\">\n      <!-- <span *ngIf=\"!addImagesForm.valid && addImagesForm.touched\"\n          class=\"error\">Please select valid data</span> -->\n        <!-- <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!addImagesForm.valid\" name=\"submit\">Save</button>       -->\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button type=\"reset\" class=\"btn btn-success\" id=\"reset-btn\" ng-click=\"addImagesForm.reset\">Reset</button> \n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers:[LoginService]\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm:FormGroup;\n  userData:{username:string,password:string};\n  loginResult:any=\"\";\n  showLoginError=false;\n  message=\"Unable to connect to the server\";\n\n  constructor(private loginService:LoginService,private router:Router,private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.loginForm=new FormGroup({\n      'username':new FormControl(null,Validators.required),\n      'password':new FormControl(null,Validators.required)\n    })\n  }\n\n  onSubmit(){\n    this.userData={\n      'username':this.loginForm.get('username').value.trim(),\n      'password':this.loginForm.get('password').value\n    }\n   this.loginService.login(this.userData).subscribe(res=>{\n    this.loginResult=res;\n    if(this.loginResult.status===\"Success\"){\n      this.router.navigate(['/home']);      \n      this.storageService.setUserData({\n        'userName':this.loginResult.userName,\n        'role':this.loginResult.role,\n        'userId':this.loginResult.userId\n      });\n    }\n    else{\n      this.showLoginError=true;\n      this.message=this.loginResult.message;\n    }},err=>{\n      console.log(err);\n      this.showLoginError=true;\n      if(err.status!=0)\n      this.message=err.error.message;\n    });\n    \n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"card text-center\">\n        <div class=\"card-header\"><b>Welcome to Surplus Kart Management </b></div>\n        <div class=\"card-body\" style=\"background-color:#B8B8B8;\">\n            <h5 class=\"card-title\">Pustira Marketing</h5>\n            <hr>\n                <form [formGroup]=\"loginForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                <label for=\"username\" style=\"color: white;\">Username :</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"username\">\n                <span *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\" class=\"error\">\n                    username is mandatory !!\n                </span>\n                <br>\n                <label for=\"password\" style=\"color: white;\">Password :</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                <span *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\" class=\"error\">\n                    password is mandatory !!\n                </span>\n                </div>  \n                <button class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Login</button>\n                <br><br>\n                <div class=\"error\" *ngIf=\"showLoginError\" style=\"background-color: yellow;\">{{message}}</div>\n                </form>\n        </div>\n    </div>\n  </div>\n  <br><br> <br><br> <br><br><br><br> <br><br> <br><br>\n  </div>","export class Transaction {\n    transId:number;\n    transStatus: string;\n    userName: string;\n    isProductApprovedByBuyer: boolean;\n    // Transaction(tId:number, transStatus:string, userName:string,isProductApprovedByBuyer:boolean){\n    // this.transId = tId ;\n    // this.transStatus= transStatus;\n    // this.userName =userName;\n    // this.isProductApprovedByBuyer =isProductApprovedByBuyer;\n    // }\n    }    ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\nimport { ProductsService } from '../services/products.service';\nimport { TransactionService } from '../services/transaction.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment'; \nimport {States} from \"../../enum/states.enum\";\nimport { StorageService } from '../services/storage.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  //productForm:FormGroup;\n  addProductForm:FormGroup;\n  message=\"\";\n  prId:any;\n  action:any;\n  userData:any;\n\n  arrCategory = environment.categoryList;\n  quantityExpressUnit = environment.quantityExpressUnit;\n  states : string[] = (Object.keys(States)).slice(Object.keys(States).length / 2);\n\n  constructor(private productService:ProductsService,\n    private transactionService:TransactionService,\n    private router:Router,\n    private route:ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private storageService:StorageService,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.addProductForm = this.formBuilder.group({\n      name: [null, [Validators.required,Validators.maxLength(50)]],\n      category: [null, Validators.required],\n      availablePackets: [null, [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5) ]],\n      qtyExpressed: [null, [Validators.required]],\n      unitPrice: [null,  [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5) ]],\n      state: [null, Validators.required],\n      city: [null, [Validators.required,Validators.maxLength(50)]],\n      brand: [null,[Validators.maxLength(50)]],\n      dateManufacture: [null, Validators.required],\n      dateExpire: [null, Validators.required],  \n      buyPacketQty:[null, Validators.required], \n      //buyerMessage:[null,Validators.required],\n      prId:[null,],\n      sellerId:[null,],\n      loadedBy:[null,],\n      // buyerId:[null,this.userData.userId],\n      packSize: [null, [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5)]]\n      });\n\n      this.prId = this.route.snapshot.params['id'];\n      this.action = this.route.snapshot.params['action'];\n      if (this.prId && this.action=='edit') {\n        this.productService.getProduct(this.prId).subscribe((res: any) => {\n          if (res.status === \"Success\") {\n          //  this.userForm.get('name').disable();\n          this.addProductForm.get('prId').setValue(this.prId);\n            this.addProductForm.patchValue(res.product)\n          }\n        })\n      }\n      // if (this.prId && this.action=='buy') {\n      //   this.transactionService.buyTransaction(this.prId).subscribe((res: any) => {\n      //     if (res.status === \"Success\") {\n      //       this.addProductForm.disable();\n      //       this.addProductForm.get('buyPacketQty').enable();\n      //       this.addProductForm.get('buyerMessage').enable();\n      //       this.addProductForm.patchValue(res.product)\n      //     }\n      //   })\n      // }\n      if (this.prId && this.action=='view') {\n        this.productService.getProduct(this.prId).subscribe((res: any) => {\n          if (res.status === \"Success\") {\n            this.addProductForm.disable();\n            this.addProductForm.patchValue(res.product)\n          }\n        })\n      }\n    }\n  \n    onSubmit(){\n      if (this.prId) {\n     this.productService.add(this.addProductForm.value).subscribe((res: any) => {\n      if (res.status === \"Success\")\n      {\n        alert(\"Record Updated\");\n        this.router.navigate([\"./../../..\"], { relativeTo: this.route })\n      }\n      else\n        this.message = res.message;\n    }, err => {\n      this.message = \"Error while proccessing request, try after sometime\"\n    });\n    }\n    else{      \n      this.addProductForm.get(\"sellerId\").setValue(this.userData.userId);\n      this.productService.add(this.addProductForm.value).subscribe((res: any) => {\n        if (res.status === \"Success\")\n          this.router.navigate([\"./..\"], { relativeTo: this.route })\n        else\n          this.message = res.message;\n      }, err => {\n        this.message = \"Error while proccessing request, try after sometime\"\n      });\n    }\n  }\n\n    // buyTransaction(){\n    //   this.addProductForm.get('buyerId').setValue(this.userData.userId); \n    //   this.transactionService.buyTransaction(this.addProductForm.value).subscribe((res: any) => {\n    //    if (res.status === \"Success\")\n    //      this.router.navigate([\"./..\"], { relativeTo: this.route })\n    //    else\n    //      this.message = res.message;\n    //  }, err => {\n    //    this.message = \"Error while proccessing request, try after sometime\"\n    //  });\n    //  }\n\n    backHistory(){\n      this.location.back();    \n    }\n\n\n  \n    onReset(){\n      this.addProductForm.reset();\n      // this.addProductForm.get('price').setValue(\"0\");\n      // this.addProductForm.get('quantity').setValue(0);\n    \n    }\n  }\n\n  \n\n\n","<!-- <app-header [isUserLoggedIn]=\"true\" ></app-header> -->\n<div class=\"col-md-6 mat-app-background\">\n  <div>\n    <h2 class=\"text-center\">Product Action</h2>\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"message!=''\" style=\"width:80%\">\n    {{message}}\n  </div>\n  <form [formGroup]=\"addProductForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"name\">Name of Product:</label>\n      <input formControlName=\"name\" placeholder=\"Like coco powder\" name=\"name\" class=\"form-control\" class=\"col-sm-8\" id=\"name\">\n      <span *ngIf=\"!addProductForm.get('name').valid && addProductForm.get('name').touched\" class=\"error\">Please enter\n        a valid product</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"category\">Category :</label>\n      <select formControlName=\"category\" placeholder=\"Category\" name=\"category\" class=\"form-control\" class=\"col-sm-8\"\n        id=\"category\">       \n        <option *ngFor=\"let itemi of arrCategory\" value={{itemi}}>{{itemi}}</option>\n        <!-- <option value=\"Other\">--Other--</option> -->\n      </select>\n\n      <span *ngIf=\"!addProductForm.get('category').valid && addProductForm.get('category').touched\" class=\"error\">Please\n        enter a valid category</span>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-8\">Product Location :</label>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"state\">State:</label>\n      <select formControlName=\"state\" placeholder=\"State\" name=\"state\" class=\"form-control\" class=\"col-sm-8\" id=\"state\">\n        <option *ngFor='let stat of states' value={{stat}}>\n          {{stat}}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"city\">City:</label>\n      <input formControlName=\"city\" placeholder=\"City\" name=\"city\" class=\"form-control\" class=\"col-sm-8\" id=\"city\">\n      <span *ngIf=\"!addProductForm.get('city').valid && addProductForm.get('city').touched\" class=\"error\">Please\n        enter a valid City</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4\" for=\"brand\">Brand:</label>\n      <input formControlName=\"brand\" placeholder=\"brand\" name=\"brand\" class=\"form-control\" class=\"col-sm-8\" id=\"brand\">\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"dateManufacture\">Date of Manufacture:</label>\n      <input type='date' formControlName=\"dateManufacture\" placeholder=\"DD/MM/YYYY\" name=\"dateManufacture\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"dateManufacture\">\n      <span *ngIf=\"!addProductForm.get('dateManufacture').valid && addProductForm.get('dateManufacture').touched\" class=\"error\">Please\n        enter a valid date</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"dateExpire\">Product Expiry Date:</label>\n      <input type='date' formControlName=\"dateExpire\" placeholder=\"Date Expire\" name=\"dateExpire\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"dateExpire\">\n      <span *ngIf=\"!addProductForm.get('dateExpire').valid && addProductForm.get('dateExpire').touched\" class=\"error\">Please\n        enter a valid date</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"packSize\">Size of packet :</label>\n      <input formControlName=\"packSize\" placeholder=\"Size of packet in kg/lt etc\" name=\"packSize\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"packSize\">\n      <span *ngIf=\"!addProductForm.get('packSize').valid && addProductForm.get('packSize').touched\" class=\"error\">Please\n        enter a valid packSize</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"availablePackets\">Available Packets :</label>\n      <input formControlName=\"availablePackets\" placeholder=\"Available Quantity\" name=\"availablePackets\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"availablePackets\">\n      <span *ngIf=\"!addProductForm.get('availablePackets').valid && addProductForm.get('availablePackets').touched\" class=\"error\">Please\n        enter a valid quantity</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"qtyExpressed\">Quantity Expressed Unit :</label>\n      <select formControlName=\"qtyExpressed\" placeholder=\"Product unit expresse in KG/LT/NO\" name=\"qtyExpressed\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"qtyExpressed\">\n        <option *ngFor='let qty of quantityExpressUnit' value={{qty}}>\n          {{qty}}\n        </option>\n      </select>\n      <span *ngIf=\"!addProductForm.get('qtyExpressed').valid && addProductForm.get('qtyExpressed').touched\" class=\"error\">Please\n        enter a valid quantity expressed unit</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"unitPrice\">Price per (KG/LT/NO) :</label>\n      <input formControlName=\"unitPrice\" placeholder=\"Price Per Unit\" name=\"unitPrice\" class=\"form-control\" class=\"col-sm-8\"\n        id=\"unitPrice\">\n      <span *ngIf=\"!addProductForm.get('unitPrice').valid && addProductForm.get('unitPrice').touched\" class=\"error\">Please\n        enter a valid unitPrice</span>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label \" for=\"loadedBy\">Sales Member UserName</label>\n      <input formControlName=\"loadedBy\" placeholder=\"UserName of Sales Member, if assisted by\" name=\"loadedBy\" class=\"form-control\" class=\"col-sm-8\"\n        id=\"loadedBy\">\n    </div> \n    <div class=\"form-group row\" *ngIf=\"this.action!='view'\">\n      &nbsp;<button type=\"submit\" class=\"btn btn-primary\">Save</button>&nbsp;\n      <button type=\"reset\" class=\"btn btn-success\" id=\"reset-btn\" ng-click=\"addProductForm.reset\">Reset</button>&nbsp;\n    </div>\n    <div class=\"form-group row\" *ngIf=\"this.action=='view'\">\n        &nbsp;<button type=\"submit\" class=\"btn btn-primary\" (click)=\"backHistory()\">Back</button>\n      </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  products: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n\n  constructor(private productsService: ProductsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.productsService.viewProductsForSeller(this.userData).subscribe((res: any) => {\n      console.log(res);\n      if (res.status === \"Success\") {\n        this.products = res.products;\n        this.message = \"Below is the list of all the products available:\"\n      }\n      else {\n        this.products = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.products = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n\n  onEdit(productId) {\n    this.action=\"edit\";\n    this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  }\n\n  // onView(productId) {\n  //   this.action=\"view\";\n  //   this.router.navigate([\"view/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  // }\n\n  // onBuy(productId) {\n  //   this.action=\"buy\";\n  //   this.router.navigate([\"edit/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  // }\n\n  // onBuy(productId) {\n  //   this.action=\"buy\";\n  //   // this.router.navigate([\"transaction/\"+productId+\"/\"+this.action],{relativeTo:this.route});\n  //   this.router.navigate([\"transaction/\"+productId+\"/\"+this.action]);\n  // }\n\n  doDocuments(productId) {\n    this.router.navigate([\"images/\"+productId],{relativeTo:this.route});\n  }\n\n  onDelete(productId) {\n    console.log(productId);\n    this.productsService.deleteProduct(productId).subscribe((res:any)=>{\n      console.log(res);\n      if(res.status===\"Success\"){\n        this.ngOnInit();\n        this.createMessage=res.message;\n      }\n      else{\n        this.createMessage=res.message;\n      }\n    },err=>{\n      if(err.status!=0)\n      this.createMessage=err.error.message;\n      else\n      this.createMessage=\"Error while processing request\"\n    });\n  }\n\n  onAdd() {\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n}\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Add Product</h2>\n    <a (click)=\"onAdd()\"><img src=\"../../assets/add-product-icon.png\" style=\"cursor: pointer;\"></a><hr><br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"products\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products | paginate: { itemsPerPage: 5, currentPage: p }\">\n          <td>{{product.name}}</td>\n          <!-- <td>{{product.price}}</td>\n          <td>{{product.quantity}}</td> -->\n          <td>{{product.category}}</td>\n          <td>{{product.availablePackets}}</td>         \n          <td *ngIf=\"userData.role==='ADMIN' || userData.userId===product.sellerId\">\n            <a (click)=\"onEdit(product.prId)\"><img src=\"../../assets/edit-icon.png\" class=\"icon\"></a>            \n            <a (click)=\"onDelete(product.prId)\"><img src=\"../../assets/delete-icon.png\" class=\"icon\"></a>\n            <!-- <a (click)=\"onBuy(product.prId)\"><img src=\"../../assets/buy-icon.jpg\" class=\"icon\"></a> -->\n            <!-- <a routerLink=\"/add-images\" > Add Documents</a> -->\n            <a (click)=\"doDocuments(product.prId)\"><img src=\"../../assets/documents.png\" class=\"icon\"></a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"products\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../services/transaction.service';\nimport { StorageService } from '../services/storage.service';\nimport { Transaction } from '../model/transaction.model';\n\n@Component({\n  selector: 'app-seller-transactions',\n  templateUrl: './seller-transactions.component.html',\n  styleUrls: ['./seller-transactions.component.css'],\n  providers: [Transaction]\n})\nexport class SellerTransactionsComponent implements OnInit {\n\n  transactions: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n  //private transaction: Transaction\n\n  constructor(private transactionService: TransactionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService,\n    private transaction: Transaction\n    ) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.transactionService.viewUserTransactions(this.userData).subscribe((res: any) => {\n     if (res.status === \"Success\") {\n        this.transactions = res.transactions;\n        this.message = \"Below is the list of all the transactions available:\"\n      }\n      else {\n        this.transactions = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.transactions = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n\n  updateTransaction(transId:any,transStatus:any){\n    this.transaction.transId = transId;\n    this.transaction.transStatus = transStatus;\n    this.transaction.userName = this.userData.userName;\n    this.transaction.isProductApprovedByBuyer = false;\n    this.transactionService.changeTransactionStatus(this.transaction).subscribe((res: any) => {\n      if (res.status === \"Success\")\n      {\n        alert(\"Transaction Status Updated\");\n        this.router.navigate([\"./../../../sellerTransactions\"], { relativeTo: this.route })\n      }\n      else\n        this.message = res.message;\n    }, err => {\n      this.message = \"Error while proccessing request, try after sometime\"\n    });\n  }\n}\n\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Available Transactions</h2>\n    <img src=\"../../assets/buy-icon.jpg\" style=\"cursor: pointer;\" class=\"icon\"><hr><br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"transactions\">\n      <thead>\n        <tr>\n          <th>Product Id</th>\n          <th>Quantity</th>\n          <th>Price</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let transaction of transactions | paginate: { itemsPerPage: 5, currentPage: p }\">\n          <td>{{transaction.prId}}</td>\n          <td>{{transaction.buyPacketQty}}</td>\n          <td>{{transaction.estimatedPrice}}</td>  \n          <td>{{transaction.transactionStatus}}</td>\n          <td>\n            <a (click)=\"updateTransaction(transaction.transId,'MATERIAL_DISPATCHED_BY_SELLER')\">\n              <img src=\"../../assets/dispatch.jpg\" title=\"Material Dispatched\" class=\"icon\"></a>      \n            <a (click)=\"updateTransaction(transaction.transId,'MONEY_REACHED_TO_SELLER')\">\n               <img src=\"../../assets/received-money.jpg\" title=\"Money Received\" class=\"icon\"></a>          \n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"transactions\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\nconst BASE_URL=\"http://localhost:9000/api/cart/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  addToCart(cartItemData:any){\n    return this.httpClient.post(BASE_URL+\"addToCart\",cartItemData);\n}\n\n  viewCartForBuyer(user:any){\n    if(user.role==='BUYER')\n    return this.httpClient.get(BASE_URL+\"getCartForBuyer/\"+user.userId);\n    if(user.role==='ADMIN')\n    return this.viewAllCartItems();\n  }\n\n  checkOutForPayment(buyData:any){\n    return this.httpClient.post(BASE_URL+\"payment\",buyData);\n}\ndeleteItem(cartItem:any){\n  alert(\"delete not implemented\");\n}\n\nviewAllCartItems(){\n  return this.httpClient.get(BASE_URL+\"getAllCartItems\");\n}\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst BASE_URL=\"http://localhost:9000/api/security/\";\r\n\r\n@Injectable()\r\nexport class LoginService{\r\n\r\n  \r\n\r\n    constructor(private httpClient:HttpClient){   \r\n    }\r\n\r\n    login(userData:any){\r\n        console.log(userData);\r\n        return this.httpClient.post(BASE_URL+\"login\",userData);\r\n       \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\n\r\nconst BASE_URL=\"http://localhost:9000/api/product/\";\r\n//const BASE_URL=\"http://localhost:8080/\";\r\n\r\n@Injectable()\r\nexport class ProductsService{\r\n\r\n    // products=[{\r\n    //     id:\"1\",\r\n    //     name:\"Product1\",\r\n    //     price:10.5,\r\n    //     quantity:1\r\n    // },{\r\n    //     id:2,\r\n    //     name:\"Product2\",\r\n    //     price:20.5,\r\n    //     quantity:2\r\n    // },{\r\n    //     id:3,\r\n    //     name:\"Product3\",\r\n    //     price:30.5,\r\n    //     quantity:3\r\n    // }]\r\n    constructor(private httpClient:HttpClient){\r\n    }\r\n\r\n    viewAllProducts(){\r\n        return this.httpClient.get(BASE_URL+\"products\");\r\n    }\r\n\r\n    viewProductsForSeller(userData:any){\r\n        if(userData.role==='ADMIN'){\r\n        return this.viewAllProducts();\r\n        }\r\n        else{\r\n        return this.httpClient.get(BASE_URL+\"getProductForSeller/\"+userData.userId);\r\n        }\r\n    }\r\n\r\n    add(productData){\r\n        return this.httpClient.post(BASE_URL+\"save\",productData);\r\n    }\r\n\r\n    deleteProduct(prId){\r\n        return this.httpClient.delete(BASE_URL+\"deleteProduct/\"+prId);\r\n        //return this.httpClient.delete(BASE_URL+\"delete\",userId);\r\n    }\r\n\r\n    getProduct(prId:any){\r\n        return this.httpClient.get(BASE_URL+\"getProduct/\"+prId);\r\n    }\r\n\r\n    getImages(prId:any){\r\n        return this.httpClient.get(BASE_URL+\"getImages/\"+prId);\r\n    }\r\n\r\n    pushFilesToStorage(pic1:File,pic2:File,pic3:File,pic4:File,msds:File,coa:File,specificationSheet:File,\r\n        productId:any) {  \r\n        let formdata: FormData = new FormData();\r\n    \r\n        pic1!=null?formdata.append('pic1', pic1, pic1.name):formdata.append('pic1', pic1) ;\r\n        pic2!=null?formdata.append('pic2', pic2, pic2.name):formdata.append('pic2', pic2) ;\r\n        pic3!=null?formdata.append('pic3', pic3, pic3.name):formdata.append('pic3', pic3) ;\r\n        pic4!=null?formdata.append('pic4', pic4, pic4.name):formdata.append('pic4', pic4) ;\r\n        msds!=null?formdata.append('msds', msds, msds.name):formdata.append('msds', msds) ;\r\n        coa!=null?formdata.append('coa', coa, coa.name):formdata.append('coa', coa) ;\r\n        specificationSheet!=null?formdata.append('specificationSheet', specificationSheet, specificationSheet.name):formdata.\r\n        append('specificationSheet', specificationSheet) ;\r\n        formdata.append('productId',productId);\r\n        const headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'multipart/form-data');\r\n        return this.httpClient.post(BASE_URL+\"/saveImages\", formdata);\r\n      }\r\n}","\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class StorageService{\r\n\r\n    userData:{userName:string,role:string, userId:string}={userName:'', role:'', userId:''};\r\n\r\n    setUserData(data:any){\r\n        this.userData.userName=data.userName;\r\n        this.userData.role=data.role;\r\n        this.userData.userId=data.userId;\r\n    }\r\n\r\n    getUserData(){\r\n        return this.userData;\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\nconst BASE_URL=\"http://localhost:9000/api/transaction/\";\n\n@Injectable()\nexport class TransactionService {\n  constructor(private httpClient:HttpClient) { }\n\n  buy(buyData:any){\n    return this.httpClient.post(BASE_URL+\"buy\",buyData);\n}\n\n// viewSellerTransactions(sellerId:any){\n//   return this.httpClient.get(BASE_URL+\"getSellerTransactions/\"+sellerId);\n// }\n\nviewUserTransactions(user:any){\n  if(user.role==='BUYER')\n  return this.httpClient.get(BASE_URL+\"getBuyerTransactions/\"+user.userId);\n  if(user.role==='SELLER')\n  return this.httpClient.get(BASE_URL+\"getSellerTransactions/\"+user.userId);\n  if(user.role==='ADMIN')\n  return this.viewAllTransactions();\n\n}\n\nviewAllTransactions(){\n  return this.httpClient.get(BASE_URL+\"getAllTransactions\");\n}\n\nchangeTransactionStatus(transaction:any){\n  return this.httpClient.post(BASE_URL+\"changeTransactionStatus\",transaction);\n}\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst BASE_URL=\"http://localhost:9000/api/user/\";\r\n\r\n@Injectable()\r\nexport class UsersService{\r\n\r\n    users=[{\r\n        id:\"1\",\r\n        name:\"Rahul\",\r\n        password:\"\",\r\n        role:\"XYZ2\",\r\n        department:\"ABC2\",\r\n        primarySkill:\"Java\"\r\n    },\r\n    {\r\n        id:\"2\",\r\n        name:\"Rahul\",\r\n        password:\"\",\r\n        role:\"XYZ2\",\r\n        department:\"ABC2\",\r\n        primarySkill:\"Java\"\r\n    },\r\n    {\r\n        id:\"3\",\r\n        name:\"Rahul\",\r\n        password:\"\",\r\n        role:\"XYZ3\",\r\n        department:\"ABC3\",\r\n        primarySkill:\"Java\"\r\n    }];\r\n\r\n    constructor(private httpClient:HttpClient){\r\n    }\r\n\r\n    viewAllUsers(){\r\n        return this.httpClient.get(BASE_URL+\"users\");\r\n    }\r\n\r\n    addUser(userData){\r\n        return this.httpClient.post(BASE_URL+\"save\",userData);\r\n    }\r\n\r\n    deleteUser(id){\r\n        return this.httpClient.delete(BASE_URL+\"deleteUser/\"+id);\r\n        //return this.httpClient.delete(BASE_URL+\"delete\",userId);\r\n    }\r\n\r\n    getUser(id:any){\r\n        return this.httpClient.get(BASE_URL+\"user/\"+id);\r\n    }\r\n    \r\n    updateUser(userData){\r\n        return this.httpClient.put(BASE_URL+\"updateUser\",userData);\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators,FormBuilder,ValidatorFn} from '@angular/forms';\nimport { ProductsService } from '../services/products.service';\nimport { TransactionService } from '../services/transaction.service';\nimport { CartService } from '../services/cart.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment'; \nimport {States} from \"../../enum/states.enum\";\nimport { StorageService } from '../services/storage.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  transactionForm:FormGroup;\n  message=\"\";\n  prId:any;\n  action:any;\n  userData:any;\n // unitPrice:any;\n  //buyPacketQty:any;  \n  estimatedPrice:any;\n\n  // arrCategory = environment.categoryList;\n  quantityExpressUnit = environment.quantityExpressUnit;\n  // states : string[] = (Object.keys(States)).slice(Object.keys(States).length / 2);\n\n  MyAwesomeRangeValidator: ValidatorFn = (fg: FormGroup) => {\n    const buyQty = fg.get('buyPacketQty').value;\n    const availableQty = fg.get('availablePackets').value;\n    return buyQty !== null && availableQty !== null && availableQty > buyQty\n      ? null\n      : { range: true };\n  };\n\n  constructor(\n    private productService:ProductsService,\n    private transactionService:TransactionService,\n    private cartService:CartService,    \n    private router:Router,\n    private route:ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private storageService:StorageService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void { \n  //  this.estimatedPrice = this.unitPrice * this.buyPacketQty;\n  \n    this.userData=this.storageService.getUserData();\n    this.transactionForm = this.formBuilder.group({\n      name: [null, [Validators.required,Validators.maxLength(50)]],\n      brand: [null,[Validators.maxLength(50)]],\n      packSize: [null, [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5)]],\n      availablePackets: [null, [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5) ]],\n      qtyExpressed: [null, [Validators.required]],\n      unitPrice: [null,  [Validators.required,Validators.pattern(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/),Validators.maxLength(5) ]],\n      buyPacketQty:[null, Validators.required], \n      estimatedPrice:[null,Validators.required],\n      prId:[null,],\n      sellerId:[null,],\n      buyerId:[null,]\n      },\n      { validator: this.MyAwesomeRangeValidator});\n\n      this.prId = this.route.snapshot.params['id'];\n      this.action = this.route.snapshot.params['action'];\n     \n      if (this.prId && this.action=='buy') {\n        this.productService.getProduct(this.prId).subscribe((res: any) => {\n          if (res.status === \"Success\") {\n           // this.transactionForm.disable();\n          //  this.transactionForm.get('buyPacketQty').enable();\n            this.transactionForm.patchValue(res.product)\n          }\n        })\n      }\n      if (this.prId && this.action=='addToCart') {\n        this.productService.getProduct(this.prId).subscribe((res: any) => {\n          if (res.status === \"Success\") {\n           // this.transactionForm.disable();\n          //  this.transactionForm.get('buyPacketQty').enable();\n            this.transactionForm.patchValue(res.product)\n          }\n        })\n      }\n     \n      if (this.prId && this.action=='view') {\n        this.productService.getProduct(this.prId).subscribe((res: any) => {\n          if (res.status === \"Success\") {\n            this.transactionForm.disable();\n            this.transactionForm.patchValue(res.product)\n          }\n        })\n      }\n  }\n\n  updateEstimatePrice(buyQty:any){\n    \n   // this.transactionForm.get('estimatedPrice').setValue(buyQty * this.transactionForm.get('unitPrice').value);\n    this.estimatedPrice=(buyQty * this.transactionForm.get('unitPrice').value * \n    this.transactionForm.get('packSize').value);\n    this.transactionForm.patchValue({ estimatedPrice: this.estimatedPrice}, \n         { emitEvent: false });\n\n    // control.valueChanges.subscribe(e => {\n    //   control.setValue(e, {emitEvent: false});\n  }\n  \n\n  buyTransaction(){\n   this.transactionForm.get(\"buyerId\").setValue(this.userData.userId);\n   this.transactionService.buy(this.transactionForm.value).subscribe((res: any) => {\n    if (res.status === \"Success\")\n    {\n      alert(\"Record Saved Successfully\");\n      this.router.navigate([\"./../../../buyer\"], { relativeTo: this.route })\n    }\n    else\n      this.message = res.message;\n  }, err => {\n    this.message = \"Error while proccessing request, try after sometime\"\n  });  \n}\n\naddToCart(){\n  this.transactionForm.get(\"buyerId\").setValue(this.userData.userId);\n  this.cartService.addToCart(this.transactionForm.value).subscribe((res: any) => {\n   if (res.status === \"Success\")\n   {\n     alert(\"Item added to Cart\");\n     this.router.navigate([\"./../../../buyer\"], { relativeTo: this.route })\n   }\n   else\n     this.message = res.message;\n }, err => {\n   this.message = \"Error while proccessing request, try after sometime\"\n });  \n}\n\n  // buyTransaction(){\n  //   this.transactionForm.get('buyerId').setValue(this.userData.userId); \n  //   this.transactionService.buyTransaction(this.transactionForm.value).subscribe((res: any) => {\n  //    if (res.status === \"Success\")\n  //      this.router.navigate([\"./..\"], { relativeTo: this.route })\n  //    else\n  //      this.message = res.message;\n  //  }, err => {\n  //    this.message = \"Error while proccessing request, try after sometime\"\n  //  });\n  //  }\n\n  backHistory(){\n    this.location.back();    \n  }\n\n  onReset(){\n    this.transactionForm.reset();\n    // this.transactionForm.get('price').setValue(\"0\");\n    // this.transactionForm.get('quantity').setValue(0);\n  \n  }\n\n\n\n}\n","<!-- <app-header [isUserLoggedIn]=\"true\" ></app-header> -->\n<div class=\"col-md-6 mat-app-background\">\n  <div>\n    <h2 class=\"text-center\">Transaction</h2>\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"message!=''\" style=\"width:80%\">\n    {{message}}\n  </div>\n  <!-- <form [formGroup]=\"transactionForm\" (ngSubmit)=\"onSubmit()\"> -->\n  <form [formGroup]=\"transactionForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"name\">Name of Product:</label>\n      <input formControlName=\"name\" placeholder=\"Like coco powder\" name=\"name\" class=\"form-control\" class=\"col-sm-8\" id=\"name\" readonly>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4\" for=\"brand\">Brand:</label>\n      <input formControlName=\"brand\" placeholder=\"brand\" name=\"brand\" class=\"form-control\" class=\"col-sm-8\" id=\"brand\" readonly>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"packSize\">Size of packet :</label>\n      <input formControlName=\"packSize\" placeholder=\"Size of packet in kg/lt etc\" name=\"packSize\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"packSize\" readonly>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"availablePackets\">Available Packets :</label>\n      <input formControlName=\"availablePackets\" placeholder=\"Available Quantity of Packets\" name=\"availablePackets\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"availablePackets\" readonly>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"qtyExpressed\">Quantity Expressed Unit :</label>\n      <select formControlName=\"qtyExpressed\" placeholder=\"Product unit expresse in KG/LT/NO\" name=\"qtyExpressed\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"qtyExpressed\" readonly>\n        <option *ngFor='let qty of quantityExpressUnit' value={{qty}}>\n          {{qty}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label required\" for=\"unitPrice\">Price per (KG/LT/NO) :</label>\n      <input formControlName=\"unitPrice\" placeholder=\"Price Per Unit\" name=\"unitPrice\" class=\"form-control\" class=\"col-sm-8\"\n        id=\"unitPrice\" readonly>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label\" for=\"buyPacketQty\">Buy Intented Units :</label>\n      <input formControlName=\"buyPacketQty\" placeholder=\"Number of Units to buy\" name=\"buyPacketQty\" class=\"form-control\"\n        class=\"col-sm-8\" id=\"buyPacketQty\" (keyup)=\"updateEstimatePrice($event.target.value)\">\n      <span *ngIf=\"!transactionForm.get('buyPacketQty').valid && transactionForm.get('buyPacketQty').touched\" class=\"error\">Please\n        enter a valid buy/addToCart unit</span>\n      <!-- <span *ngIf=\"transactionForm.get('buyPacketQty').valid && transactionForm.get('estimatedPrice').setValue(5)\"></span> -->\n      <span *ngIf=\"transactionForm.get('buyPacketQty').value > transactionForm.get('availablePackets').value\" class=\"error\">Buy \n        Quantity is more than Available Quantity</span>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-4 control-label\" for=\"estimatedPrice\">Estimated Price :</label>\n      <input formControlName=\"estimatedPrice\" placeholder=\"Estimated Price\" name=\"estimatedPrice\" \n      class=\"form-control\" class=\"col-sm-8\" id=\"estimatedPrice\" readonly>\n    </div>\n    <!-- <div class=\"form-group row\" *ngIf=\"this.action!='buy' && this.action!='view'\">\n        &nbsp;<button type=\"submit\" class=\"btn btn-primary\">Save</button>&nbsp;\n        <button type=\"reset\" class=\"btn btn-success\" id=\"reset-btn\" ng-click=\"transactionForm.reset\">Reset</button>&nbsp;\n      </div> -->\n    <div class=\"form-group row\" *ngIf=\"this.action=='buy'\">\n      &nbsp;<button type=\"submit\" class=\"btn btn-primary\" (click)=\"buyTransaction()\" [disabled]=\"!transactionForm.valid\">Buy</button>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"this.action=='addToCart'\">\n      &nbsp;<button type=\"submit\" class=\"btn btn-primary\" (click)=\"addToCart()\" [disabled]=\"!transactionForm.valid\">AddToCart</button>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"this.action=='view' || this.action=='buy'\">\n      &nbsp;<button type=\"submit\" class=\"btn btn-primary\" (click)=\"backHistory()\">Back</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../services/transaction.service';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\n\nexport class TransactionsComponent implements OnInit {\n\n  transactions: any;\n  message = \"\";\n  p: number = 1;\n  userData:any;\n  createMessage=\"\";\n  action:any;\n\n  constructor(private transactionService: TransactionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storageService:StorageService) { }\n\n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.transactionService.viewUserTransactions(this.userData).subscribe((res: any) => {\n     if (res.status === \"Success\") {\n        this.transactions = res.transactions;\n        this.message = \"Below is the list of all the transactions available:\"\n      }\n      else {\n        this.transactions = \"\";\n        this.message = res.message;\n      }\n      console.log(this.message);\n    }, err => {\n      if (err.status != 0)\n        this.transactions = err.error.message;\n      else\n        this.message = \"Error while processing request\"\n    })\n\n  }\n\n\n\n\n\n\n\n\n\n\n \n\n \n\n}\n","\n<div class=\"container\">\n    <br><br>\n    <!-- <div *ngIf=\"userData.role==='ADMIN' || userData.role==='PROD_MANAGER'\"> -->\n    <h2 style=\"display: inline;\">Available Transactions</h2>\n    <img src=\"../../assets/buy-icon.jpg\" style=\"cursor: pointer;\" class=\"icon\"><hr><br>\n    <p>{{message}}</p>            \n    <table class=\"table table-hover\" *ngIf=\"transactions\">\n      <thead>\n        <tr>\n          <th>Product Id</th>\n          <th>Quantity</th>\n          <th>Price</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let transaction of transactions | paginate: { itemsPerPage: 5, currentPage: p }\">\n          <td>{{transaction.prId}}</td>\n          <td>{{transaction.buyPacketQty}}</td>\n          <td>{{transaction.estimatedPrice}}</td>\n          <td>{{transaction.transactionStatus}}</td>\n          <td>\n          <a (click)=\"updateTransaction(transaction.transId,'MATERIAL_REACHED_BUYER')\">\n              <img src=\"../../assets/materialReceived.png\" title=\"Material Received\" class=\"icon\"></a>\n          <a (click)=\"updateTransaction(transaction.transId,'MATERIAL_APPROVED_BY_BUYER')\">\n              <img src=\"../../assets/materialApproved.png\" title=\"Material Approved\" class=\"icon\"></a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br><br>\n    <div class=\"page\" *ngIf=\"transactions\">\n      <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from '../services/users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Role} from \"../../enum/role.enum\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  userForm: FormGroup;\n  message = \"\";\n  id;\n  arrRoles : string[] = (Object.keys(Role)).slice(Object.keys(Role).length / 2);\n\n\n  constructor(private userService: UsersService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userForm = new FormGroup({\n      'userName': new FormControl(\"\", [Validators.required,Validators.maxLength(20)]),\n      'password': new FormControl('', [Validators.required,Validators.maxLength(50)]),\n      'role': new FormControl('', Validators.required),\n      'fullName': new FormControl(\"\", [Validators.required,Validators.maxLength(100)]),\n      'mobile': new FormControl('', [Validators.required,Validators.pattern(/^[0-9]\\d*$/),Validators.maxLength(10)]),\n      'primaryEmail': new FormControl(\"\", [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),Validators.maxLength(100)]),\n      'company': new FormControl(\"\", [Validators.required,Validators.maxLength(50)]),\n      'designation': new FormControl(\"\", [Validators.required,Validators.maxLength(50)]),\n      'address': new FormControl(\"\", [Validators.required,Validators.maxLength(150)]),\n      'city': new FormControl(\"\", [Validators.required,Validators.maxLength(50)]),\n      'state': new FormControl(\"\", [Validators.required,Validators.maxLength(50)]),\n      'pinCode': new FormControl(\"\", [Validators.required,Validators.pattern(/^[0-9]\\d*$/),Validators.maxLength(6)])\n    });\n\n    this.id = this.route.snapshot.params['id'];\n    if (this.id) {\n      this.userService.getUser(this.id).subscribe((res: any) => {\n        if (res.status === \"Success\") {\n          this.userForm.get('userName').disable();\n          this.userForm.patchValue(res.user);\n          this.userForm.patchValue(res.user.userDtls)\n        }\n      })\n    }\n  }\n\n  onSubmit() {\n    console.log(this.userForm.value);\n\n    if (this.id) {\n      this.userService.updateUser(this.userForm.getRawValue()).subscribe((res: any) => {\n        if (res.status === \"Success\")\n          this.router.navigate([\"./../..\"], { relativeTo: this.route })\n        else\n          this.message = res.message;\n      }, err => {\n        this.message = \"Error while proccessing request, try after sometime\"\n      })\n\n    }\n    else {\n      this.userService.addUser(this.userForm.value).subscribe((res: any) => {\n        if (res.status === \"Success\")\n          this.router.navigate([\"./..\"], { relativeTo: this.route })\n        else\n          this.message = res.message;\n      }, err => {\n        this.message = \"Error while proccessing request, try after sometime\"\n      })\n\n    }\n  }\n\n  onReset() {\n    this.userForm.reset();\n    this.userForm.get('role').setValue(\"\");\n  }\n}\n","<div class=\"container\">\n    \n    <br><h2>User Details</h2>\n    <hr>\n    <br>\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"message!=''\" style=\"width:50%\">\n      {{message}}\n    </div>\n    <form [formGroup]=\"userForm\">\n      <div class=\"form-group\">\n        <label for=\"userName\" class=\"required\">Username:</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter username less then 20 chars\" formControlName=\"userName\">\n        <span *ngIf=\"!userForm.get('userName').valid && userForm.get('userName').touched\" class=\"error\">\n           user name is mandatory !!\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\" class=\"required\">Password:</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password less then 100 chars\" formControlName=\"password\">\n        <span *ngIf=\"!userForm.get('password').valid && userForm.get('password').touched\" class=\"error\">\n            password is mandatory !!\n        </span>\n    </div>\n  \n  <div class=\"form-group\">\n    <label for=\"role\" class=\"required\">Role:</label>\n    <select formControlName=\"role\" placeholder=\"role\" name=\"role\" class=\"form-control\" id=\"role\">\n      <option *ngFor='let role of arrRoles' value={{role}}>\n          {{role}}\n      </option>\n    </select>   \n      <span *ngIf=\"!userForm.get('role').valid && userForm.get('role').touched\" class=\"error\">\n        role is mandatory !!\n    </span>\n    <div class=\"form-group\">\n      <label for=\"fullName\" class=\"required\">Full Name:</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Full Name of the user\" formControlName=\"fullName\">\n      <span *ngIf=\"!userForm.get('fullName').valid && userForm.get('fullName').touched\" class=\"error\">\n         full name is mandatory and max length should be less then 100 chars !!\n      </span>\n    </div>\n  </div>\n      <div class=\"form-group\">\n        <label for=\"mobile\" class=\"required\">Mobile No:</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"10 digit mobile no\" formControlName=\"mobile\">\n        <span *ngIf=\"!userForm.get('mobile').valid && userForm.get('mobile').touched\" class=\"error\">\n            mobile no is mandatory and must be 10 digit numeric !!\n        </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"primaryEmail\" class=\"required\">Email Id:</label>\n      <input type=\"email\" class=\"form-control\" placeholder=\"Enter official email id\" formControlName=\"primaryEmail\">\n      <span *ngIf=\"!userForm.get('primaryEmail').valid && userForm.get('primaryEmail').touched\" class=\"error\">\n        Valid Email id is mandatory !!\n      </span>\n  </div>\n    <div class=\"form-group\">\n      <label for=\"company\" class=\"required\">Company Name:</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Enter company name\" formControlName=\"company\">\n      <span *ngIf=\"!userForm.get('company').valid && userForm.get('company').touched\" class=\"error\">\n        Company Name is mandatory !!\n      </span>\n  </div>\n    <div class=\"form-group\">\n        <label for=\"designation\" class=\"required\">Designation:</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter designation in company\" formControlName=\"designation\">\n        <span *ngIf=\"!userForm.get('designation').valid && userForm.get('designation').touched\" class=\"error\">\n            Designation is mandatory !!\n        </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"address\" class=\"required\">Address:</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Enter address of company\" formControlName=\"address\">\n      <span *ngIf=\"!userForm.get('address').valid && userForm.get('address').touched\" class=\"error\">\n          Address is mandatory !!\n      </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"city\" class=\"required\">City:</label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Enter city of the company\" formControlName=\"city\">\n    <span *ngIf=\"!userForm.get('city').valid && userForm.get('city').touched\" class=\"error\">\n        City is mandatory !!\n    </span>\n</div>\n<div class=\"form-group\">\n  <label for=\"state\" class=\"required\">State:</label>\n  <input type=\"text\" class=\"form-control\" placeholder=\"Enter state of the company\" formControlName=\"state\">\n  <span *ngIf=\"!userForm.get('state').valid && userForm.get('state').touched\" class=\"error\">\n      State is mandatory !!\n  </span>\n</div>\n<div class=\"form-group\">\n  <label for=\"pinCode\" class=\"required\">Pin Code:</label>\n  <input type=\"text\" class=\"form-control\" placeholder=\"Enter pinCode of company\" formControlName=\"pinCode\">\n  <span *ngIf=\"!userForm.get('pinCode').valid && userForm.get('pinCode').touched\" class=\"error\">\n      PinCode is mandatory !!\n  </span>\n</div>\n      <button class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid\">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;\n      <button class=\"btn btn-primary\" (click)=\"onReset()\">Reset</button>\n    </form>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StorageService } from '../services/storage.service';\nimport { NgAnalyzedModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  users:any;\n  message=\"\";\n  createMessage=\"\";\n  userData:any=\"\";\n  constructor(private usersService:UsersService,\n    private router:Router,\n    private route:ActivatedRoute,\n    private storageService:StorageService) { }\n  \n  ngOnInit(): void {\n    this.userData=this.storageService.getUserData();\n    this.usersService.viewAllUsers().subscribe((res:any)=>{\n      console.log(\"response fetched for user component.ts oninit viewallusers:\"+res);\n      if(res.status===\"Success\"){\n        this.users=res.users;\n        this.message=\"Below is the list of all the users available:\"\n      }\n      else{\n        this.users=\"\";\n        this.message=res.message;\n      }\n       console.log(this.message);\n    },err=>{\n      if(err.status!=0)\n      this.message=err.error.message;\n      else\n      this.message=\"Error while processing request\"\n    })\n    console.log(this.users);\n  }\n\n  onEdit(userId){\n    this.router.navigate([\"edit/\"+userId],{relativeTo:this.route});\n  }\n\n  onDelete(userId){\n    console.log(userId);\n    this.usersService.deleteUser(userId).subscribe((res:any)=>{\n      console.log(res);\n      if(res.status===\"Success\"){\n        this.ngOnInit();\n        this.createMessage=res.message;\n      }\n      else{\n        this.createMessage=res.message;\n      }\n    },err=>{\n      if(err.status!=0)\n      this.createMessage=err.error.message;\n      else\n      this.createMessage=\"Error while processing request\"\n    });\n  }\n\n  onAdd(){\n    this.router.navigate(['add'],{relativeTo:this.route});\n  }\n}\n","\n<div class=\"container\">\n    <br><br>\n    <div *ngIf=\"userData.role==='ADMIN'\">\n    <h2 style=\"display: inline;\">Add User</h2>\n    <a (click)=\"onAdd()\"><img src=\"../../assets/add-user-icon.png\" style=\"cursor: pointer;\"></a>\n  \n    <br><br>\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"createMessage!=''\" style=\"width:80%\">\n      {{createMessage}}\n    </div>\n  </div>\n    <hr>\n    <br>\n    <p>{{message}} </p>            \n    <table class=\"table table-hover\" *ngIf=\"users\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Role</th>\n            <!-- <th>Department</th>\n            <th>Primary Skill</th> -->\n          <th *ngIf=\"userData.role==='ADMIN'\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of users\">\n          <td>{{user.userName}}</td>\n          <td>{{user.role}}</td>\n          <!--<td>{{user.userId}}</td>\n           <td>{{user.primarySkill}}</td> -->\n          <td *ngIf=\"userData.role==='ADMIN'\"><a (click)=\"onEdit(user.userId)\"><img src=\"../../assets/edit-icon.png\" class=\"icon\"></a>\n            <a (click)=\"onDelete(user.userId)\"><img src=\"../../assets/delete-icon.png\" class=\"icon\"></a>      \n          </td> \n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","export enum Role {\n    GUEST,SELLER,BUYER,MANAGER,ADMIN\n}\n","export enum States {\n    'Andaman and Nicobar','Andhra Pradesh','Arunachal Pradesh','Assam','Bihar','Chandigarh','Chhattisgarh',\n    'Dadra and Nagar Haveli','Daman and Diu','Delhi','Goa','Gujarat','Haryana','Himachal Pradesh','Jammu and Kashmir',\n    'Jharkhand','Karnataka','Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur','Meghalaya','Mizoram',\n    'Nagaland','Odisha','Puducherry','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telangana','Tripura','Uttar Pradesh',\n    'Uttarakhand','West Bengal'   \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  categoryList:['Preservatives','Sweeteners','Color Additives','Flavors and Spices','Flavor Enhancers',\n  'Fat Replacers (and components of formulations used to replace fats)','Nutrients','Emulsifiers','Stabilizers and Thickeners','Binders','Texturizers',\n  'pH Control Agents and acidulants','Leavening Agents','Anti-caking agents','Humectants','Yeast Nutrients','Dough Strengtheners and Conditioners',\n  'Firming Agents','Enzyme Preparations','Gases'],\n  quantityExpressUnit:['Kilogram','Litre','NO']\n};\n\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}